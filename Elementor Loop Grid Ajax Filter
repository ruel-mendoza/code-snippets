<?php
//Added April 2025
function rm_custom_postgrid_filter_two() {
	if (is_page(5369)) { // Replace 42 with the ID of the post
		?>
		<script async rel='ru'>
			
			jQuery(document).ready(function($) {
			const searchInput = $('#loop-grid-search');
			
			const parentloopGridContainer =  $(document); // **IMPORTANT: Replace with the actual CSS class of your Loop Grid container**
			
			let timeoutId;

			searchInput.on('input', function() {
				const loopGridContainer = $('.looptips .elementor-loop-container.elementor-grid');
				const searchTerm = $(this).val();

						
				clearTimeout(timeoutId);
				
				timeoutId = setTimeout(function() {
				if (searchTerm.trim() !== '') {
					$('nav.elementor-pagination').hide();
					loopGridContainer.find('.e-loop-item').remove();
				} else {
					loadLoopGridPage();					
				}				
					
					
					//elementsToRemove.remove();

					$.ajax({
						url: ajax_object.ajax_url,
						async: false,
                        dataType : "text",
						type: 'POST',						
						data : {action: "filter_loop_grid", search_term : searchTerm},
						success: function(data) {
							let processedHTML = '';
							try {
								const tempContainer = $('<div>').html(data);
								const items = tempContainer.find('.e-loop-item');

								items.each(function() {
									const item = $(this);
									item.addClass('processed-item');
									const videoElement = item.find('.elementor-video');
									const titlepost = item.find('h2').text();
									const dataSettings = item.find('.elementor-widget-video').data('settings');

									if (dataSettings) {
										try {
											const settings = dataSettings;
											const rawURL = settings.youtube_url ? settings.youtube_url.replace('https:\/\/http://', 'https://') : '';
											let videoId = null;

											const urlParts = rawURL.match(/(?:https?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|playlist\?list=))([\w-]{11,})/);
											if (urlParts && urlParts[1]) {
												videoId = urlParts[1];
											}

											if (videoId) {
												
												const embedURL = 'https://www.youtube.com/embed/'+videoId+'?controls=1&rel=0&playsinline=0&cc_load_policy=0&autoplay=0&enablejsapi=1&vf=1';
												const youtubeEmbedCode = '<iframe width="560" height="315" title="' + titlepost + '" src="'+embedURL+'" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
												videoElement.html(youtubeEmbedCode);
											} else {
												console.warn("Could not extract YouTube video ID from the URL.");
											}
										} catch (error) {
											console.error("Error parsing Elementor Video widget data-settings:", error);
										}
									}
									processedHTML += item[0].outerHTML;
								});

								loopGridContainer.append(processedHTML);

							} catch (error) {
								console.error("Error processing AJAX response:", error);
								loopGridContainer.html(data);
							}
						},
						error: function(errorThrown) {
							console.error('AJAX Error:', errorThrown);
						}
					});
				}, 1000);
			});
			
			function loadLoopGridPage() {
				$.ajax({
					url: ajax_object.ajax_url, // Your localized AJAX URL
					type: 'POST',
					dataType: 'html',
					data: {
						action: 'load_loop_grid_page', // Your WordPress AJAX action hook
						page: getCurrentLoopGridPage(),
						// You can also send other parameters if needed (e.g., filters, sorts)
					},
					beforeSend: function() {
						loopGridContainer.addClass('loading'); // Optional: Show loading indicator
					},
					success: function(response) {
						loopGridContainer.html(response); // Replace the Loop Grid content

						// Optional: Update active pagination link (if Elementor doesn't handle this automatically)
						paginationContainer.find('a.page-numbers').removeClass('elementor-pagination--current');
						paginationContainer.find('a.page-numbers').filter(function() {
							return $(this).attr('href') === (pageNumber === 1 ? window.location.pathname : window.location.pathname + 'page/' + pageNumber + '/'); // Adjust URL matching
						}).addClass('elementor-pagination--current');

						// Optional: Re-initialize any JavaScript that depends on the new content
					},
					error: function(errorThrown) {
						console.error('Error loading Loop Grid page:', errorThrown);
						loopGridContainer.removeClass('loading'); // Optional: Hide loading indicator
						// Optionally display an error message to the user
					},
					complete: function() {
						loopGridContainer.removeClass('loading'); // Optional: Hide loading indicator
					}
				});
			}
			// Function to get the current Loop Grid page number from the URL
				function getCurrentLoopGridPage() {
					const currentUrl = window.location.href;
					const urlParams = new URLSearchParams(window.location.search);

					const ePageParam = urlParams.get('e-page-22b0e61'); // Replace 'e-page-22b0e61' with the actual query parameter name

					if (ePageParam) {
						return parseInt(ePageParam);
					} else {
						return 1; // Default to page 1 if the parameter is not found
					}
				}
		});	
			
		</script>
		<?php
	}
}
add_action('wp_head', 'rm_custom_postgrid_filter_two');

function enqueue_ajax_script() {
    wp_enqueue_script('ajax_search', get_stylesheet_directory_uri() . '/js/ajax-search.js', array('jquery'), null, true);
    
    // Localize the script to use 'ajax_url'
    wp_localize_script('ajax_search', 'ajax_object', array('ajax_url' => admin_url('admin-ajax.php')));
}
add_action('wp_enqueue_scripts', 'enqueue_ajax_script');

add_action('wp_ajax_filter_loop_grid', 'filter_loop_grid_callback');
add_action('wp_ajax_nopriv_filter_loop_grid', 'filter_loop_grid_callback'); // For non-logged-in users

function filter_loop_grid_callback() {
    $searchTerm = sanitize_text_field($_POST['search_term']);
	
    $args = array(
        'post_type' => 'post', // **IMPORTANT: Replace with the post type used in your Loop Grid**
        's'         => $searchTerm,      // WordPress search parameter
        'posts_per_page' => -1,         // Show all matching posts (adjust as needed)
		'search_columns' => array('post_title'),
        // Add other query parameters as needed (e.g., taxonomies, meta queries) to match your Loop Grid's base query
    );

    $query = new WP_Query($args);
	
    $output = '';
	
    if ($query->have_posts()) {
		
        while ($query->have_posts()) {
            $query->the_post();
            // **IMPORTANT: Generate the HTML for EACH Loop Grid item here**
            // You need to replicate the structure and dynamic tags you used in your Elementor Loop Item template.           
			$output .= do_shortcode('[elementor-template id="4533"]');			
        }
        wp_reset_postdata();
    } else {
        $output .= '<p>No results found.</p>';
    }

    echo $output;
    wp_die(); // Required for AJAX responses
}
?>
